{"version":3,"sources":["TopNav.js","GitHubApp.js","SudokuApp.js","FrontPage.js","SpeedCount/Timer.js","SpeedCount/utils.js","SpeedCount/Game.js","SpeedCount/SpeedCount.js","serviceWorker.js","ToDo/TodoApp.js","index.js"],"names":["TopNav","className","to","React","Component","Card","props","this","bio","public_repos","followers","src","avatar_url","alt","name","Form","handleSubmit","event","a","preventDefault","fetch","state","username","res","status","json","jsonObj","onSubmit","console","log","setState","errorMessage","onNameChange","target","value","type","onChange","placeholder","required","GitHubApp","addNewProfile","profileData","prev","profiles","myData","id","data","CardList","map","profile","key","Square","history","e","clearAll","onClick","buttonIsClicked","onContextMenu","resetIndividual","text","SudokuApp","contextMenu","incrementAmount","table","i","children","j","push","prevAmount","style","color","margin","makeBoard","incrementAll","FrontPage","class","document","write","encodeURI","window","location","hostname","Timer","useEffect","secondsLeft","availableNums","length","timerId","setInterval","setSecondsLeft","clearInterval","colors","available","used","wrong","candidate","utils","sum","arr","reduce","acc","curr","range","min","max","Array","from","_","random","Math","floor","randomSumIn","sets","sums","len","candidateSet","concat","candidateSum","SunsDisplay","count","sunId","PlayNumber","backgroundColor","number","PlayAgain","gameStatus","Game","useState","suns","setSuns","setAvailableNums","candidateNums","setCandidateNums","setGameState","newCandidateNums","newAvailableNums","filter","n","includes","useGameState","candidatesAreWrong","numberStatus","onNumberClick","currStatus","num","startNewGame","SpeedCount","gameId","setGameId","Boolean","match","Project","toggleDisplay","toggleCloseDisplay","bind","onMouseEnter","onMouseLeave","projectStr","visibility","projectCloseClicked","Todo","todosStr","closeClicked","TodoApp","projectInput","todoInput","reloadTodo","getProjectsList","getTodosList","onChangeTodo","onChangeProject","onProjectClick","updatedData","forEach","index","splice","todoStr","item","innerIndex","projectName","currProjectArr","slice","todoItem","savedIndex","newData","displayError","width","display","ReactGA","initialize","pageview","createBrowserHistory","listen","set","page","pathname","routing","exact","path","component","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.64ad09b2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Route, Link, BrowserRouter as Router } from 'react-router-dom'\r\n\r\nclass TopNav extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n      <div className=\"TopNavLinkButtons\">\r\n        <Link className=\"theLink\" to=\"./\">Go to Home Page</Link>\r\n        <Link className=\"theLink\" to=\"./TodoApp\">Go to Todo App</Link>\r\n        <Link className=\"theLink\" to=\"./SpeedCountApp\">Go to SpeedCount App</Link>\r\n        <Link className=\"theLink\" to=\"./GitHubApp\">Go to GitHub App</Link>\r\n        <Link className=\"theLink\" to=\"./SudokuApp\">Go to Sudoku App</Link>\r\n      </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TopNav;","import React from \"react\";\r\nimport TopNav from './TopNav';\r\nimport \"./GitHubApp.css\"\r\n\r\nclass Card extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const output = `\r\n    Bio: ${this.props.bio} <br />Public Repos: ${this.props.public_repos} \\\r\n    | Followers: ${this.props.followers}`;\r\n\r\n    return (\r\n      <div className=\"imgandcard\">\r\n        <div className=\"imgCard\">\r\n          <img src={this.props.avatar_url} alt=\"\"/>\r\n        </div>\r\n        <div className=\"github-profile\">\r\n          <div className=\"info\">\r\n            <div className=\"name\">{this.props.name}</div>\r\n            <div className=\"company\">\r\n              <span className=\"textDesc\">Bio:</span> {this.props.bio} <br />\r\n              <span className=\"textDesc\">Public Repos:</span> {this.props.public_repos} <br />\r\n              <span className=\"textDesc\">Followers:</span> {this.props.followers} <br />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Form extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      errorMessage: \"\",\r\n    };\r\n  }\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n      const res = await fetch(\r\n        `https://api.github.com/users/${this.state.username}`\r\n      );\r\n      if (res.status !== 404) {\r\n        const jsonObj = await res.json();\r\n        this.props.onSubmit(jsonObj);\r\n        console.log(jsonObj);\r\n        this.setState({\r\n          username: \"\",\r\n        });\r\n        this.setState({errorMessage: \"\"});\r\n      }\r\n      else {\r\n        // alert(\"API Fetch Failed.\");\r\n        this.setState({errorMessage: \"API fetch failed. Enter a valid GitHub user.\"});\r\n      }\r\n\r\n  };\r\n\r\n  onNameChange = (event) => {\r\n    this.setState({\r\n      username: event.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      <form type=\"submit\" className=\"git-form-box\" onSubmit={this.handleSubmit}>\r\n        <input\r\n          className=\"inputGit\"\r\n          type=\"text\"\r\n          onChange={this.onNameChange}\r\n          value={this.state.username}\r\n          placeholder=\"GitHub username\"\r\n          required\r\n        />\r\n        <button className=\"buttonGit\">Add User</button>\r\n      </form>\r\n      <div className=\"error-message\">{this.state.errorMessage}</div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nclass GitHubApp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      profiles: myData,\r\n    };\r\n  }\r\n\r\n  addNewProfile = (profileData) => {\r\n    this.setState( prev => (\r\n      {profiles: [...prev.profiles, profileData]}\r\n    ))\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <TopNav />\r\n        <div className=\"GitHubApp\">\r\n          <div id=\"titleApp\">GitHub Cards</div>\r\n          <Form onSubmit={this.addNewProfile} />\r\n          <CardList data={this.state.profiles} />\r\n        </div>\r\n        <div id=\"help-note\"><b>Note:</b> Add a GitHub username to include their information in this card.</div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst CardList = (props) => {\r\n  return (\r\n    <>\r\n      {props.data.map((profile) => (\r\n        <Card key={profile.id} {...profile} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nconst myData = [\r\n  {\r\n    name: \"John Smith\",\r\n    avatar_url:\r\n      \"https://wallpaperhd.wiki/wp-content/uploads/4k-wallpaper-minimalist-the-witcher-3-wild-hunt-minimalist-uhdpaper.com-4k-5.1321-wp.thumbnail.jpg\",\r\n    bio: \"Software Engineer at Earth Labs\",\r\n    public_repos: 3,\r\n    followers: 5\r\n  },\r\n];\r\n\r\nexport default GitHubApp;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './SudokuApp.css';\r\nimport TopNav from './TopNav';\r\n\r\nclass Square extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.state = {\r\n        history: 0,\r\n      }\r\n    }\r\n  \r\n    buttonIsClicked(e) {\r\n      this.setState({\r\n        history: this.state.history + 1,\r\n      });\r\n    }\r\n  \r\n    resetIndividual(e) {\r\n      this.setState({\r\n        history: 0,\r\n        \r\n      })\r\n    }\r\n  \r\n    render() {\r\n      if (this.props.clearAll) {\r\n        this.setState({\r\n          history: 0,\r\n        });\r\n      }\r\n  \r\n      return (\r\n        <td \r\n          id=\"squareButton\"\r\n          onClick={(e) => this.buttonIsClicked(e)}\r\n          onContextMenu={(e) => this.resetIndividual(e)}\r\n        >\r\n          {this.state.history + this.props.text}\r\n        </td>\r\n      );\r\n    }\r\n  }\r\n  \r\n  class SudokuApp extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.state = {\r\n        incrementAmount: 0,\r\n        clearAll: false\r\n      }\r\n  \r\n    }\r\n    \r\n    makeBoard()  {\r\n      let table = [];\r\n      let id = 0;\r\n      for (let i = 0; i < 5; i++) {\r\n        let children = [];\r\n        for (let j = 0; j < 5; j++) {\r\n          children.push(<Square key={id} clearAll={this.state.clearAll} text={this.state.incrementAmount}/>);\r\n          id += 1;\r\n        }\r\n        table.push(<tr key={id}>{children}</tr>);\r\n        id += 1;\r\n      }\r\n  \r\n      if (this.state.clearAll) {\r\n        this.setState({\r\n          clearAll: false,\r\n        })\r\n      }\r\n  \r\n      return table;\r\n    }\r\n  \r\n    incrementAll(e) {\r\n      const prevAmount = this.state.incrementAmount;\r\n      this.setState({\r\n        incrementAmount: prevAmount + 1,\r\n      });\r\n    }\r\n  \r\n    clearAll(e) {\r\n      this.setState({\r\n        clearAll: true,\r\n        incrementAmount: 0\r\n      });\r\n    }\r\n\r\n    contextMenu = (e) => {\r\n      e.preventDefault();\r\n    };\r\n\r\n    render() {\r\n      const tempVar = 1;\r\n  \r\n      return(\r\n        <div>\r\n          <TopNav />\r\n          <h1 style={{color: \"red\", margin: \"50px auto\"}} id=\"greeting\"> In Progress </h1>\r\n          <table id=\"myTableId\" className=\"myTable\" onContextMenu={this.contextMenu}>\r\n            <tbody>\r\n              {this.makeBoard()}\r\n            </tbody>\r\n          </table>\r\n          <div className=\"botOfGrid\">\r\n            <div>\r\n              <br />\r\n              <button id=\"incrementAll\" onClick={(e) => this.incrementAll(e)}>Increment All</button>\r\n              <div>Increment Amount: {this.state.incrementAmount}</div>\r\n              <br />\r\n            </div>\r\n            <button id=\"clearAll\" onClick={(e) => this.clearAll(e)}>Clear All</button>\r\n            <div>Right Click Individual Box to Reset Individual History</div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\nexport default SudokuApp;\r\n","import React from 'react';\r\nimport './FrontPage.css';\r\n\r\nimport ReactGA from 'react-ga';\r\n\r\nimport { Route, Link, BrowserRouter as Router } from 'react-router-dom'\r\n\r\n\r\nclass FrontPage extends React.Component {\r\n    render() {\r\n      return (\r\n        <div id=\"front-page-container\">\r\n          <div id=\"greeting\">\r\n            My React Apps\r\n          </div>\r\n          <div class=\"linkButtons\">\r\n            <Link className=\"theLink\" to=\"./TodoApp\">Go to Todo App</Link>\r\n            <Link className=\"theLink\" to=\"./SpeedCountApp\">Go to SpeedCount App</Link>\r\n            <Link className=\"theLink\" to=\"./GitHubApp\">Go to GitHub App</Link>\r\n            <Link className=\"theLink\" to=\"./SudokuApp\">Go to Sudoku App</Link>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\ndocument.write('<img id=\"counter\" src=\"https://counter.websiteout.net/compte.php?S='+encodeURI(window.location.hostname)+'&C=36&D=0&N=0&M=1\" alt=\"\" border=\"0\" />');\r\n\r\nexport default FrontPage;","import React, { useState, useEffect } from \"react\";\r\n\r\nconst Timer = (props) => {\r\n    useEffect(() => {\r\n      if (props.secondsLeft > 0 && props.availableNums.length > 0) {\r\n        const timerId = setInterval(() => {\r\n            props.setSecondsLeft(props.secondsLeft - 1);\r\n        }, 1000);\r\n        return () => clearInterval(timerId);\r\n      }\r\n    },\r\n    [props.secondsLeft, props.availableNums.length]);\r\n  \r\n    return (\r\n      <div className=\"timer\">Time Remaining: <span id=\"timer-number\">{props.secondsLeft}</span></div>\r\n    )\r\n};\r\n\r\nexport default Timer;","// Color Theme\r\nconst colors = {\r\n    available: \"rgb(85, 38, 0)\",\r\n    used: \"lightgreen\",\r\n    wrong: \"lightcoral\",\r\n    candidate: \"deepskyblue\",\r\n  };\r\n  \r\n  // Math science\r\n  const utils = {\r\n    // Sum an array\r\n    sum: (arr) => arr.reduce((acc, curr) => acc + curr, 0),\r\n  \r\n    // create an array of numbers between min and max (edges included)\r\n    range: (min, max) => Array.from({ length: max - min + 1 }, (_, i) => min + i),\r\n  \r\n    // pick a random number between min and max (edges included)\r\n    random: (min, max) => min + Math.floor(Math.random() * (max - min + 1)),\r\n  \r\n    // Given an array of numbers and a max...\r\n    // Pick a random sum (< max) from the set of all available sums in arr\r\n    randomSumIn: (arr, max) => {\r\n      const sets = [[]];\r\n      const sums = [];\r\n      for (let i = 0; i < arr.length; i++) {\r\n        for (let j = 0, len = sets.length; j < len; j++) {\r\n          const candidateSet = sets[j].concat(arr[i]);\r\n          const candidateSum = utils.sum(candidateSet);\r\n          if (candidateSum <= max) {\r\n            sets.push(candidateSet);\r\n            sums.push(candidateSum);\r\n          }\r\n        }\r\n      }\r\n      return sums[utils.random(0, sums.length - 1)];\r\n    },\r\n  };\r\n\r\nexport {colors, utils};","import React, { useState } from \"react\";\r\nimport Timer from \"./Timer\";\r\nimport {colors, utils} from \"./utils\";\r\n\r\nconst SunsDisplay = (props) => (\r\n    <>\r\n      {utils.range(1, props.count).map((sunId) => (\r\n        <div key={sunId} className=\"sun\" />\r\n      ))}\r\n    </>\r\n);\r\n  \r\nconst PlayNumber = (props) => (\r\n<button\r\n    className=\"number\"\r\n    style={{ backgroundColor: colors[props.status] }}\r\n    onClick={() => props.onClick(props.number, props.status)}\r\n>\r\n    {props.number}\r\n</button>\r\n);\r\n\r\nconst PlayAgain = (props) => (\r\n<div className=\"game-done\">\r\n    <div\r\n    className=\"message\"\r\n    style={{ color: props.gameStatus === \"lost\" ? \"red\" : \"green\" }}\r\n    >\r\n    {props.gameStatus === \"lost\" ? \"Game Over\" : \"That was fast! You won!\"}\r\n    </div>\r\n    <button id=\"play-again-btn\" onClick={props.onClick}>Play Again</button>\r\n</div>\r\n);\r\n\r\n// Custom Hook, Stateful Function\r\nconst useGameState = () => {\r\n    const [suns, setSuns] = useState(utils.random(1, 9));\r\n    const [availableNums, setAvailableNums] = useState(utils.range(1, 9));\r\n    const [candidateNums, setCandidateNums] = useState([]);\r\n    const [secondsLeft, setSecondsLeft] = useState(10);\r\n  \r\n    const setGameState = (newCandidateNums) => {\r\n      if (utils.sum(newCandidateNums) !== suns) {\r\n        setCandidateNums(newCandidateNums);\r\n      } else {\r\n        const newAvailableNums = availableNums.filter(\r\n          (n) => !newCandidateNums.includes(n)\r\n        );\r\n  \r\n        //redraw suns (from what's available)\r\n        setSuns(utils.randomSumIn(newAvailableNums, 9));\r\n        setAvailableNums(newAvailableNums);\r\n        setCandidateNums([]);\r\n      }\r\n    };\r\n  \r\n    return { suns, availableNums, candidateNums, secondsLeft, setSecondsLeft, setGameState };\r\n};\r\n\r\nconst Game = (props) => {\r\n    const {\r\n      suns,\r\n      availableNums,\r\n      candidateNums,\r\n      secondsLeft,\r\n      setSecondsLeft,\r\n      setGameState,\r\n    } = useGameState();\r\n  \r\n    const candidatesAreWrong = utils.sum(candidateNums) > suns;\r\n  \r\n    const gameStatus =\r\n      availableNums.length === 0 ? \"won\" : secondsLeft === 0 ? \"lost\" : \"active\";\r\n  \r\n    const numberStatus = (number) => {\r\n      if (!availableNums.includes(number)) {\r\n        return \"used\";\r\n      }\r\n  \r\n      if (candidateNums.includes(number)) {\r\n        return candidatesAreWrong ? \"wrong\" : \"candidate\";\r\n      }\r\n  \r\n      return \"available\";\r\n    };\r\n  \r\n    const onNumberClick = (number, currStatus) => {\r\n      // determine new status of number after being clicked\r\n      if (currStatus === \"used\" || gameStatus !== \"active\") {\r\n        return;\r\n      }\r\n  \r\n      const newCandidateNums =\r\n        currStatus === \"available\"\r\n          ? candidateNums.concat(number)\r\n          : candidateNums.filter((num) => num !== number);\r\n  \r\n      setGameState(newCandidateNums);\r\n    };\r\n  \r\n    return (\r\n      <>\r\n        <div className=\"game\">\r\n          <div className=\"help\">\r\n            Count the Number of Suns!\r\n          </div>\r\n          <div className=\"body\">\r\n            <div className=\"left\">\r\n              {gameStatus !== \"active\" ? (\r\n                <PlayAgain onClick={props.startNewGame} gameStatus={gameStatus} />\r\n              ) : (\r\n                <SunsDisplay count={suns} />\r\n              )}\r\n            </div>\r\n            <div className=\"right\">\r\n              {utils.range(1, 9).map((number) => (\r\n                <PlayNumber\r\n                  key={number}\r\n                  status={numberStatus(number)}\r\n                  number={number}\r\n                  onClick={onNumberClick}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <Timer secondsLeft={secondsLeft} setSecondsLeft={setSecondsLeft} availableNums={availableNums} />\r\n          <div className=\"help-note\"><b>Note:</b> Select the number(s) that adds up to equal the count of the suns. You can also deselect a number you've selected by clicking on it again. </div>\r\n        </div>\r\n      </>\r\n    );\r\n};\r\n\r\nexport default Game;","import React, { useState, useEffect } from \"react\";\r\nimport Game from\"./Game\";\r\nimport TopNav from \"../TopNav\";\r\n\r\nimport \"./SpeedCount.css\";\r\n\r\nconst SpeedCount = (props) => {\r\n  const [gameId, setGameId] = useState(1);\r\n  return (\r\n    <>\r\n    <TopNav />\r\n    <Game key={gameId} startNewGame={() => setGameId(gameId + 1)} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SpeedCount;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { useState, Fragment } from \"react\";\r\nimport \"./TodoApp.css\";\r\nimport shortid from \"shortid\";\r\n\r\nimport TopNav from \"../TopNav\";\r\n\r\nclass Project extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      toggleDisplay: \"hidden\",\r\n    }\r\n\r\n    this.toggleCloseDisplay = this.toggleCloseDisplay.bind(this);\r\n  }\r\n\r\n  toggleCloseDisplay() {\r\n    this.setState({\r\n      toggleDisplay: this.state.toggleDisplay === \"hidden\" ?  \"visible\" : \"hidden\", \r\n    })\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"project-item\" onClick={this.props.onClick} onMouseEnter={this.toggleCloseDisplay} onMouseLeave={this.toggleCloseDisplay}>\r\n        {this.props.projectStr}\r\n        <div\r\n          className=\"project-close-button\"\r\n          style={{ visibility: this.state.toggleDisplay }}\r\n          onClick={() => this.props.projectCloseClicked(this.props.projectStr)}\r\n        ></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nclass Todo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      toggleDisplay: \"hidden\",\r\n    }\r\n\r\n    this.toggleCloseDisplay = this.toggleCloseDisplay.bind(this);\r\n  }\r\n\r\n  toggleCloseDisplay() {\r\n    this.setState({\r\n      toggleDisplay: this.state.toggleDisplay === \"hidden\" ?  \"visible\" : \"hidden\", \r\n    })\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"todo-item\" onMouseEnter={this.toggleCloseDisplay} onMouseLeave={this.toggleCloseDisplay}>\r\n        {this.props.todosStr}\r\n        <div\r\n          className=\"close-button\"\r\n          style={{ visibility: this.state.toggleDisplay }}\r\n          onClick={() => this.props.closeClicked(this.props.todosStr)}\r\n        ></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass TodoApp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: [\r\n        [\"Grocery Shopping\", \"Get Peanut Butter\", \"Remember Trail Mix\"],\r\n        [\r\n          \"School Preparation\",\r\n          \"Get 0.5in Pen\",\r\n          \"5 Subject Notebook\",\r\n          \"Some snacks...\",\r\n        ],\r\n      ],\r\n      projectInput: \"Grocery Shopping\",\r\n      todoInput: \"\",\r\n      errorMessage: \"\",\r\n      reloadTodo: 1,\r\n    };\r\n\r\n    this.getProjectsList = this.getProjectsList.bind(this);\r\n    this.getTodosList = this.getTodosList.bind(this);\r\n    this.onChangeTodo = this.onChangeTodo.bind(this);\r\n    this.onChangeProject = this.onChangeProject.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.onProjectClick = this.onProjectClick.bind(this);\r\n    this.closeClicked = this.closeClicked.bind(this);\r\n    this.projectCloseClicked = this.projectCloseClicked.bind(this);\r\n  }\r\n\r\n  projectCloseClicked(projectStr) {\r\n    let updatedData = this.state.data;\r\n\r\n    updatedData.forEach((arr, index) => {\r\n      if (arr[0] === projectStr) {\r\n        updatedData.splice(index, 1);\r\n      }\r\n    });\r\n\r\n    this.setState({\r\n      data: updatedData,\r\n    });\r\n  }\r\n\r\n  closeClicked(todoStr) {\r\n    let updatedData = this.state.data;\r\n\r\n    updatedData.forEach((arr, index) => {\r\n      arr.forEach((item, innerIndex) => {\r\n        if (item === todoStr) {\r\n          updatedData[index].splice(innerIndex, 1);\r\n        }\r\n      }) \r\n    });\r\n\r\n    this.setState({\r\n      data: updatedData,\r\n      reloadTodo: this.state.reloadTodo + 1,\r\n    });\r\n  }\r\n\r\n  onProjectClick(projectName) {\r\n    this.setState({\r\n      projectInput: projectName,\r\n      reloadTodo: this.state.reloadTodo + 1,\r\n    });\r\n  }\r\n\r\n  getProjectsList() {\r\n    return this.state.data.map((arr) => (\r\n      <Project\r\n        onClick={() => this.onProjectClick(arr[0])}\r\n        projectStr={arr[0]}\r\n        projectCloseClicked={this.projectCloseClicked}\r\n      />\r\n    ));\r\n  }\r\n\r\n  getTodosList(e) {\r\n    let currProjectArr = this.state.data.filter(\r\n      (arr) => arr[0] === this.state.projectInput\r\n    );\r\n    if (currProjectArr.length === 1) {\r\n      currProjectArr = currProjectArr[0].slice(1);\r\n      return currProjectArr.map((todoItem) => <Todo closeClicked={this.closeClicked} todosStr={todoItem} />);\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  onChangeTodo(e) {\r\n    this.setState({ todoInput: e.target.value });\r\n  }\r\n\r\n  onChangeProject(e) {\r\n    this.setState({ projectInput: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (this.state.projectInput == \"\" || this.state.todoInput == \"\")\r\n    {\r\n      this.setState({\r\n        errorMessage: \"Both fields must be filled to create a todo.\",\r\n      });\r\n      return;\r\n    } else {\r\n      this.setState({\r\n        errorMessage: \"\",\r\n      });\r\n    }\r\n\r\n    let savedIndex = -1;\r\n    this.state.data.forEach((arr, index) => {\r\n      if (arr[0] === this.state.projectInput) {\r\n        savedIndex = index;\r\n      }\r\n    });\r\n\r\n    let newData = this.state.data;\r\n\r\n    if (savedIndex !== -1) {\r\n      newData[savedIndex].push(this.state.todoInput);\r\n    } else {\r\n      let arr = [this.state.projectInput, this.state.todoInput];\r\n      newData.push(arr);\r\n    }\r\n\r\n    this.setState({\r\n      data: newData,\r\n      reloadTodo: this.state.reloadTodo + 1,\r\n      todoInput: \"\", \r\n    });\r\n  }\r\n\r\n  render() {\r\n    const displayError = this.state.errorMessage !== \"\" ? \"inherit\" : \"none\";\r\n\r\n    return (\r\n      <Fragment>\r\n        <TopNav />\r\n        <h1\r\n          style={{ color: \"black\", margin: \"100px auto -100px auto\", width: \"600px\" }}\r\n          id=\"greeting\"\r\n        >\r\n          Todo List\r\n        </h1>\r\n        <div className=\"container\">\r\n          <div className=\"top-bar\">\r\n            <form type=\"submit\" className=\"todo-form-box\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Add todo\"\r\n                value={this.state.todoInput}\r\n                onChange={this.onChangeTodo}\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Add to a Project\"\r\n                value={this.state.projectInput}\r\n                onChange={this.onChangeProject}\r\n                required\r\n              />\r\n              <input type=\"submit\" value=\"Submit\" onClick={this.onSubmit} />\r\n            </form>\r\n            <div style={{display: displayError }} className=\"error-message\">{this.state.errorMessage}</div>\r\n          </div>\r\n          <div className=\"todo-body\">\r\n            <div className=\"left-nav\">\r\n              <div className=\"title-bar\">\r\n                <h4 className=\"todo-titles\">Projects</h4>\r\n              </div>\r\n              <div id=\"projects-list\">{this.getProjectsList()}</div>\r\n            </div>\r\n            <div className=\"seperator\"></div>\r\n            <div className=\"right-nav\">\r\n              <div className=\"title-bar\">\r\n                <h4 className=\"todo-titles\">Todos</h4>\r\n              </div>\r\n              <div key={this.state.reloadTodo} id=\"todos-list\">\r\n                {this.getTodosList()}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoApp;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport GitHubApp from './GitHubApp';\r\nimport SudokuApp from './SudokuApp';\r\nimport FrontPage from './FrontPage';\r\nimport SpeedCount from './SpeedCount/SpeedCount';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Redirect, Route, Link, BrowserRouter as Router } from 'react-router-dom'\r\nimport TodoApp from './ToDo/TodoApp';\r\n\r\nimport ReactGA from 'react-ga';\r\nimport { createBrowserHistory } from 'history';\r\n\r\nconst trackingId = 'UA-165682331-1';\r\nReactGA.initialize(trackingId);\r\nReactGA.pageview('/homepage');\r\n\r\nconst history = createBrowserHistory();\r\nhistory.listen(location => {\r\n  ReactGA.set({ page: location.pathname }); // Update the user's current page\r\n  ReactGA.pageview(location.pathname); // Record a pageview for the given page\r\n});\r\n\r\nconst routing = (\r\n  <Router history={history}>\r\n    <div>\r\n      <Route exact path={'/'} component={FrontPage} />\r\n      <Route path={\"/GitHubApp\"} component={GitHubApp} />\r\n      <Route path={\"/SudokuApp\"} component={SudokuApp} />\r\n      <Route path={\"/SpeedCountApp\"} component={SpeedCount} />\r\n      <Route path={\"/TodoApp\"} component={TodoApp} />\r\n      <Redirect to={'/'} />\r\n    </div>\r\n  </Router>\r\n)\r\n\r\nReactDOM.render(\r\n  // <OutputComponents />\r\n  routing,\r\n  document.getElementById('reactSide')\r\n);\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}