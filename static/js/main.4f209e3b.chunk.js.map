{"version":3,"sources":["TopNav.js","GitHubApp.js","SudokuApp.js","FrontPage.js","SpeedCount/Timer.js","SpeedCount/utils.js","SpeedCount/Game.js","SpeedCount/SpeedCount.js","serviceWorker.js","ToDo/TodoApp.js","index.js"],"names":["TopNav","className","to","React","Component","Card","props","this","bio","public_repos","followers","src","avatar_url","name","Form","handleSubmit","event","a","preventDefault","fetch","state","username","res","status","json","jsonObj","onSubmit","console","log","setState","errorMessage","onNameChange","target","value","type","onChange","placeholder","required","GitHubApp","addNewProfile","profileData","prev","profiles","myData","id","data","CardList","map","profile","key","Square","history","e","clearAll","onClick","buttonIsClicked","onContextMenu","resetIndividual","text","contextMenu","incrementAmount","table","i","children","j","push","prevAmount","makeBoard","incrementAll","FrontPage","class","Timer","useEffect","secondsLeft","availableNums","length","timerId","setInterval","setSecondsLeft","clearInterval","colors","available","used","wrong","candidate","utils","sum","arr","reduce","acc","curr","range","min","max","Array","from","_","random","Math","floor","randomSumIn","sets","sums","len","candidateSet","concat","candidateSum","SunsDisplay","count","sunId","PlayNumber","style","backgroundColor","number","PlayAgain","color","gameStatus","Game","useState","suns","setSuns","setAvailableNums","candidateNums","setCandidateNums","setGameState","newCandidateNums","newAvailableNums","filter","n","includes","useGameState","candidatesAreWrong","numberStatus","onNumberClick","currStatus","num","startNewGame","SpeedCount","gameId","setGameId","Boolean","window","location","hostname","match","TodoApp","routing","exact","path","component","SudokuApp","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4f209e3b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Route, Link, BrowserRouter as Router } from 'react-router-dom'\r\n\r\nclass TopNav extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n      <div className=\"TopNavLinkButtons\">\r\n        <Link className=\"theLink\" to=\"./\">Go to Home Page</Link>\r\n        <Link className=\"theLink\" to=\"./GitHubApp\">Go to GitHub App</Link>\r\n        <Link className=\"theLink\" to=\"./SudokuApp\">Go to Sudoku App</Link>\r\n        <Link className=\"theLink\" to=\"./SpeedCountApp\">Go to SpeedCount App</Link>\r\n        <Link className=\"theLink\" to=\"./TodoApp\">Go to Todo App</Link>\r\n      </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TopNav;","import React from \"react\";\r\nimport TopNav from './TopNav';\r\nimport \"./GitHubApp.css\"\r\n\r\nclass Card extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const output = `\r\n    Bio: ${this.props.bio} <br />Public Repos: ${this.props.public_repos} \\\r\n    | Followers: ${this.props.followers}`;\r\n\r\n    return (\r\n      <div className=\"imgandcard\">\r\n        <div className=\"imgCard\">\r\n          <img src={this.props.avatar_url} />\r\n        </div>\r\n        <div className=\"github-profile\">\r\n          <div className=\"info\">\r\n            <div className=\"name\">{this.props.name}</div>\r\n            <div className=\"company\">\r\n              <span className=\"textDesc\">Bio:</span> {this.props.bio} <br />\r\n              <span className=\"textDesc\">Public Repos:</span> {this.props.public_repos} <br />\r\n              <span className=\"textDesc\">Followers:</span> {this.props.followers} <br />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Form extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      errorMessage: \"\",\r\n    };\r\n  }\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n      const res = await fetch(\r\n        `https://api.github.com/users/${this.state.username}`\r\n      );\r\n      if (res.status !== 404) {\r\n        const jsonObj = await res.json();\r\n        this.props.onSubmit(jsonObj);\r\n        console.log(jsonObj);\r\n        this.setState({\r\n          username: \"\",\r\n        });\r\n        this.setState({errorMessage: \"\"});\r\n      }\r\n      else {\r\n        // alert(\"API Fetch Failed.\");\r\n        this.setState({errorMessage: \"API fetch failed. Enter a valid GitHub user.\"});\r\n      }\r\n\r\n  };\r\n\r\n  onNameChange = (event) => {\r\n    this.setState({\r\n      username: event.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      <form type=\"submit\" className=\"formBox\" onSubmit={this.handleSubmit}>\r\n        <input\r\n          className=\"inputGit\"\r\n          type=\"text\"\r\n          onChange={this.onNameChange}\r\n          value={this.state.username}\r\n          placeholder=\"GitHub username\"\r\n          required\r\n        />\r\n        <button className=\"buttonGit\">Add User</button>\r\n      </form>\r\n      <div className=\"error-message\">{this.state.errorMessage}</div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nclass GitHubApp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      profiles: myData,\r\n    };\r\n  }\r\n\r\n  addNewProfile = (profileData) => {\r\n    this.setState( prev => (\r\n      {profiles: [...prev.profiles, profileData]}\r\n    ))\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <TopNav />\r\n        <div className=\"GitHubApp\">\r\n          <div id=\"titleApp\">GitHub Cards</div>\r\n          <Form onSubmit={this.addNewProfile} />\r\n          <CardList data={this.state.profiles} />\r\n        </div>\r\n        <div id=\"help-note\"><b>Note:</b> Add a GitHub username to include their information in this card.</div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst CardList = (props) => {\r\n  return (\r\n    <>\r\n      {props.data.map((profile) => (\r\n        <Card key={profile.id} {...profile} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nconst myData = [\r\n  {\r\n    name: \"John Smith\",\r\n    avatar_url:\r\n      \"https://wallpaperhd.wiki/wp-content/uploads/4k-wallpaper-minimalist-the-witcher-3-wild-hunt-minimalist-uhdpaper.com-4k-5.1321-wp.thumbnail.jpg\",\r\n    bio: \"Software Engineer at Earth Labs\",\r\n    public_repos: 3,\r\n    followers: 5\r\n  },\r\n];\r\n\r\nexport default GitHubApp;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './SudokuApp.css';\r\nimport TopNav from './TopNav';\r\n\r\nclass Square extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.state = {\r\n        history: 0,\r\n      }\r\n    }\r\n  \r\n    buttonIsClicked(e) {\r\n      this.setState({\r\n        history: this.state.history + 1,\r\n      });\r\n    }\r\n  \r\n    resetIndividual(e) {\r\n      this.setState({\r\n        history: 0,\r\n        \r\n      })\r\n    }\r\n  \r\n    render() {\r\n      if (this.props.clearAll) {\r\n        this.setState({\r\n          history: 0,\r\n        });\r\n      }\r\n  \r\n      return (\r\n        <td \r\n          id=\"squareButton\"\r\n          onClick={(e) => this.buttonIsClicked(e)}\r\n          onContextMenu={(e) => this.resetIndividual(e)}\r\n        >\r\n          {this.state.history + this.props.text}\r\n        </td>\r\n      );\r\n    }\r\n  }\r\n  \r\n  class GitHubApp extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.state = {\r\n        incrementAmount: 0,\r\n        clearAll: false\r\n      }\r\n  \r\n    }\r\n    \r\n    makeBoard()  {\r\n      let table = [];\r\n      let id = 0;\r\n      for (let i = 0; i < 5; i++) {\r\n        let children = [];\r\n        for (let j = 0; j < 5; j++) {\r\n          children.push(<Square key={id} clearAll={this.state.clearAll} text={this.state.incrementAmount}/>);\r\n          id += 1;\r\n        }\r\n        table.push(<tr key={id}>{children}</tr>);\r\n        id += 1;\r\n      }\r\n  \r\n      if (this.state.clearAll) {\r\n        this.setState({\r\n          clearAll: false,\r\n        })\r\n      }\r\n  \r\n      return table;\r\n    }\r\n  \r\n    incrementAll(e) {\r\n      const prevAmount = this.state.incrementAmount;\r\n      this.setState({\r\n        incrementAmount: prevAmount + 1,\r\n      });\r\n    }\r\n  \r\n    clearAll(e) {\r\n      this.setState({\r\n        clearAll: true,\r\n        incrementAmount: 0\r\n      });\r\n    }\r\n\r\n    contextMenu = (e) => {\r\n      e.preventDefault();\r\n    };\r\n\r\n    render() {\r\n      const tempVar = 1;\r\n  \r\n      return(\r\n        <div>\r\n          <TopNav />\r\n          <table id=\"myTableId\" className=\"myTable\" onContextMenu={this.contextMenu}>\r\n            <tbody>\r\n              {this.makeBoard()}\r\n            </tbody>\r\n          </table>\r\n          <div className=\"botOfGrid\">\r\n            <div>\r\n              <br />\r\n              <button id=\"incrementAll\" onClick={(e) => this.incrementAll(e)}>Increment All</button>\r\n              <div>Increment Amount: {this.state.incrementAmount}</div>\r\n              <br />\r\n            </div>\r\n            <button id=\"clearAll\" onClick={(e) => this.clearAll(e)}>Clear All</button>\r\n            <div>Right Click Individual Box to Reset Individual History</div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\nexport default GitHubApp;\r\n","import React from 'react';\r\nimport './FrontPage.css';\r\n\r\nimport { Route, Link, BrowserRouter as Router } from 'react-router-dom'\r\n\r\nclass FrontPage extends React.Component {\r\n    render() {\r\n      return (\r\n        <div id=\"front-page-container\">\r\n          <div id=\"greeting\">\r\n            My React Apps\r\n          </div>\r\n          <div class=\"linkButtons\">\r\n            <Link className=\"theLink\" to=\"./GitHubApp\">Go to GitHub App</Link>\r\n            <Link className=\"theLink\" to=\"./SudokuApp\">Go to Sudoku App</Link>\r\n            <Link className=\"theLink\" to=\"./SpeedCountApp\">Go to SpeedCount App</Link>\r\n            <Link className=\"theLink\" to=\"./TodoApp\">Go to Todo App</Link>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default FrontPage;","import React, { useState, useEffect } from \"react\";\r\n\r\nconst Timer = (props) => {\r\n    useEffect(() => {\r\n      if (props.secondsLeft > 0 && props.availableNums.length > 0) {\r\n        const timerId = setInterval(() => {\r\n            props.setSecondsLeft(props.secondsLeft - 1);\r\n        }, 1000);\r\n        return () => clearInterval(timerId);\r\n      }\r\n    },\r\n    [props.secondsLeft, props.availableNums.length]);\r\n  \r\n    return (\r\n      <div className=\"timer\">Time Remaining: <span id=\"timer-number\">{props.secondsLeft}</span></div>\r\n    )\r\n};\r\n\r\nexport default Timer;","// Color Theme\r\nconst colors = {\r\n    available: \"rgb(85, 38, 0)\",\r\n    used: \"lightgreen\",\r\n    wrong: \"lightcoral\",\r\n    candidate: \"deepskyblue\",\r\n  };\r\n  \r\n  // Math science\r\n  const utils = {\r\n    // Sum an array\r\n    sum: (arr) => arr.reduce((acc, curr) => acc + curr, 0),\r\n  \r\n    // create an array of numbers between min and max (edges included)\r\n    range: (min, max) => Array.from({ length: max - min + 1 }, (_, i) => min + i),\r\n  \r\n    // pick a random number between min and max (edges included)\r\n    random: (min, max) => min + Math.floor(Math.random() * (max - min + 1)),\r\n  \r\n    // Given an array of numbers and a max...\r\n    // Pick a random sum (< max) from the set of all available sums in arr\r\n    randomSumIn: (arr, max) => {\r\n      const sets = [[]];\r\n      const sums = [];\r\n      for (let i = 0; i < arr.length; i++) {\r\n        for (let j = 0, len = sets.length; j < len; j++) {\r\n          const candidateSet = sets[j].concat(arr[i]);\r\n          const candidateSum = utils.sum(candidateSet);\r\n          if (candidateSum <= max) {\r\n            sets.push(candidateSet);\r\n            sums.push(candidateSum);\r\n          }\r\n        }\r\n      }\r\n      return sums[utils.random(0, sums.length - 1)];\r\n    },\r\n  };\r\n\r\nexport {colors, utils};","import React, { useState } from \"react\";\r\nimport Timer from \"./Timer\";\r\nimport {colors, utils} from \"./utils\";\r\n\r\nconst SunsDisplay = (props) => (\r\n    <>\r\n      {utils.range(1, props.count).map((sunId) => (\r\n        <div key={sunId} className=\"sun\" />\r\n      ))}\r\n    </>\r\n);\r\n  \r\nconst PlayNumber = (props) => (\r\n<button\r\n    className=\"number\"\r\n    style={{ backgroundColor: colors[props.status] }}\r\n    onClick={() => props.onClick(props.number, props.status)}\r\n>\r\n    {props.number}\r\n</button>\r\n);\r\n\r\nconst PlayAgain = (props) => (\r\n<div className=\"game-done\">\r\n    <div\r\n    className=\"message\"\r\n    style={{ color: props.gameStatus === \"lost\" ? \"red\" : \"green\" }}\r\n    >\r\n    {props.gameStatus === \"lost\" ? \"Game Over\" : \"That was fast! You won!\"}\r\n    </div>\r\n    <button id=\"play-again-btn\" onClick={props.onClick}>Play Again</button>\r\n</div>\r\n);\r\n\r\n// Custom Hook, Stateful Function\r\nconst useGameState = () => {\r\n    const [suns, setSuns] = useState(utils.random(1, 9));\r\n    const [availableNums, setAvailableNums] = useState(utils.range(1, 9));\r\n    const [candidateNums, setCandidateNums] = useState([]);\r\n    const [secondsLeft, setSecondsLeft] = useState(10);\r\n  \r\n    const setGameState = (newCandidateNums) => {\r\n      if (utils.sum(newCandidateNums) !== suns) {\r\n        setCandidateNums(newCandidateNums);\r\n      } else {\r\n        const newAvailableNums = availableNums.filter(\r\n          (n) => !newCandidateNums.includes(n)\r\n        );\r\n  \r\n        //redraw suns (from what's available)\r\n        setSuns(utils.randomSumIn(newAvailableNums, 9));\r\n        setAvailableNums(newAvailableNums);\r\n        setCandidateNums([]);\r\n      }\r\n    };\r\n  \r\n    return { suns, availableNums, candidateNums, secondsLeft, setSecondsLeft, setGameState };\r\n};\r\n\r\nconst Game = (props) => {\r\n    const {\r\n      suns,\r\n      availableNums,\r\n      candidateNums,\r\n      secondsLeft,\r\n      setSecondsLeft,\r\n      setGameState,\r\n    } = useGameState();\r\n  \r\n    const candidatesAreWrong = utils.sum(candidateNums) > suns;\r\n  \r\n    const gameStatus =\r\n      availableNums.length === 0 ? \"won\" : secondsLeft === 0 ? \"lost\" : \"active\";\r\n  \r\n    const numberStatus = (number) => {\r\n      if (!availableNums.includes(number)) {\r\n        return \"used\";\r\n      }\r\n  \r\n      if (candidateNums.includes(number)) {\r\n        return candidatesAreWrong ? \"wrong\" : \"candidate\";\r\n      }\r\n  \r\n      return \"available\";\r\n    };\r\n  \r\n    const onNumberClick = (number, currStatus) => {\r\n      // determine new status of number after being clicked\r\n      if (currStatus === \"used\" || gameStatus !== \"active\") {\r\n        return;\r\n      }\r\n  \r\n      const newCandidateNums =\r\n        currStatus === \"available\"\r\n          ? candidateNums.concat(number)\r\n          : candidateNums.filter((num) => num !== number);\r\n  \r\n      setGameState(newCandidateNums);\r\n    };\r\n  \r\n    return (\r\n      <>\r\n        <div className=\"game\">\r\n          <div className=\"help\">\r\n            Count the Number of Suns!\r\n          </div>\r\n          <div className=\"body\">\r\n            <div className=\"left\">\r\n              {gameStatus !== \"active\" ? (\r\n                <PlayAgain onClick={props.startNewGame} gameStatus={gameStatus} />\r\n              ) : (\r\n                <SunsDisplay count={suns} />\r\n              )}\r\n            </div>\r\n            <div className=\"right\">\r\n              {utils.range(1, 9).map((number) => (\r\n                <PlayNumber\r\n                  key={number}\r\n                  status={numberStatus(number)}\r\n                  number={number}\r\n                  onClick={onNumberClick}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <Timer secondsLeft={secondsLeft} setSecondsLeft={setSecondsLeft} availableNums={availableNums} />\r\n          <div className=\"help-note\"><b>Note:</b> Select multiple numbers to add them to equal the count of the suns. You can also deselect a number you've selected by clicking on it again. </div>\r\n        </div>\r\n      </>\r\n    );\r\n};\r\n\r\nexport default Game;","import React, { useState, useEffect } from \"react\";\r\nimport Game from\"./Game\";\r\nimport TopNav from \"../TopNav\";\r\n\r\nimport \"./SpeedCount.css\";\r\n\r\nconst SpeedCount = (props) => {\r\n  const [gameId, setGameId] = useState(1);\r\n  return (\r\n    <>\r\n    <TopNav />\r\n    <Game key={gameId} startNewGame={() => setGameId(gameId + 1)} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SpeedCount;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport \"./TodoApp.css\";\r\n\r\nimport TopNav from '../TopNav';\r\n\r\nfunction TodoApp() {\r\n  return (\r\n    <Fragment>\r\n      <TopNav />\r\n      <div className=\"container\">\r\n        <div className=\"top-bar\">\r\n          <input type=\"text\" placeholder=\"Add todo\" />\r\n          <input type=\"button\" value=\"Submit\" />\r\n        </div>\r\n        <div className=\"todo-body\">\r\n          <div className=\"left-nav\">\r\n          </div>\r\n          <div className=\"todos\">\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default TodoApp;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport GitHubApp from './GitHubApp';\r\nimport SudokuApp from './SudokuApp';\r\nimport FrontPage from './FrontPage';\r\nimport SpeedCount from './SpeedCount/SpeedCount';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Redirect, Route, Link, BrowserRouter as Router } from 'react-router-dom'\r\nimport TodoApp from './ToDo/TodoApp';\r\n\r\nconst routing = (\r\n  <Router>\r\n    <div>\r\n      <Route exact path={process.env.PUBLIC_URL + '/'} component={FrontPage} />\r\n      <Route path=\"/GitHubApp\" component={GitHubApp} />\r\n      <Route path=\"/SudokuApp\" component={SudokuApp} />\r\n      <Route path=\"/SpeedCountApp\" component={SpeedCount} />\r\n      <Route path=\"/TodoApp\" component={TodoApp} />\r\n      <Redirect to={process.env.PUBLIC_URL + '/'} />\r\n    </div>\r\n  </Router>\r\n)\r\n\r\nReactDOM.render(\r\n  // <OutputComponents />\r\n  routing,\r\n  document.getElementById('reactSide')\r\n);\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}