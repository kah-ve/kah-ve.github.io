{"version":3,"sources":["TopNav.js","GitHubApp.js","SudokuApp.js","FrontPage.js","SpeedCount/SpeedCount.js","serviceWorker.js","index.js"],"names":["TopNav","className","to","React","Component","Card","props","this","bio","public_repos","followers","src","avatar_url","name","Form","handleSubmit","event","a","preventDefault","fetch","state","username","res","status","json","jsonObj","onSubmit","console","log","setState","onNameChange","target","value","type","onChange","placeholder","required","GitHubApp","addNewProfile","profileData","prev","profiles","myData","id","data","CardList","map","profile","key","Square","history","e","clearAll","onClick","buttonIsClicked","onContextMenu","resetIndividual","text","contextMenu","incrementAmount","table","i","children","j","push","prevAmount","makeBoard","incrementAll","FrontPage","class","SunsDisplay","utils","range","count","sunId","PlayNumber","style","backgroundColor","colors","number","PlayAgain","color","gameStatus","Game","useState","random","suns","setSuns","availableNums","setAvailableNums","candidateNums","setCandidateNums","secondsLeft","setSecondsLeft","useEffect","length","timerId","setTimeout","clearTimeout","setGameState","newCandidateNums","sum","newAvailableNums","filter","n","includes","randomSumIn","useGameState","candidatesAreWrong","numberStatus","onNumberClick","currStatus","concat","num","startNewGame","available","used","wrong","candidate","arr","reduce","acc","curr","min","max","Array","from","_","Math","floor","sets","sums","len","candidateSet","candidateSum","SpeedCount","gameId","setGameId","Boolean","window","location","hostname","match","routing","exact","path","component","SudokuApp","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.127fb61f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Route, Link, BrowserRouter as Router } from 'react-router-dom'\r\n\r\nclass TopNav extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n      <div className=\"TopNavLinkButtons\">\r\n        <Link className=\"theLink\" to=\"./\">Go to Home Page</Link>\r\n        <Link className=\"theLink\" to=\"./GitHubApp\">Go to GitHub App</Link>\r\n        <Link className=\"theLink\" to=\"./SudokuApp\">Go to Sudoku App</Link>\r\n        <Link className=\"theLink\" to=\"./SpeedCount\">Go to SpeedCount App</Link>\r\n      </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TopNav;","import React from \"react\";\r\nimport TopNav from './TopNav';\r\nimport \"./GitHubApp.css\"\r\n\r\nclass Card extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const output = `\r\n    Bio: ${this.props.bio} <br />Public Repos: ${this.props.public_repos} \\\r\n    | Followers: ${this.props.followers}`;\r\n\r\n    return (\r\n      <div className=\"imgandcard\">\r\n        <div className=\"imgCard\">\r\n          <img src={this.props.avatar_url} />\r\n        </div>\r\n        <div className=\"github-profile\">\r\n          <div className=\"info\">\r\n            <div className=\"name\">{this.props.name}</div>\r\n            <div className=\"company\">\r\n              <span className=\"textDesc\">Bio:</span> {this.props.bio} <br />\r\n              <span className=\"textDesc\">Public Repos:</span> {this.props.public_repos} <br />\r\n              <span className=\"textDesc\">Followers:</span> {this.props.followers} <br />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Form extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n    };\r\n  }\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n      const res = await fetch(\r\n        `https://api.github.com/users/${this.state.username}`\r\n      );\r\n      if (res.status != \"404\") {\r\n        const jsonObj = await res.json();\r\n        this.props.onSubmit(jsonObj);\r\n        console.log(jsonObj);\r\n        this.setState({\r\n          username: \"\",\r\n        });\r\n      }\r\n      else {\r\n        console.log(\"API Fetch Failed.\");\r\n      }\r\n\r\n  };\r\n\r\n  onNameChange = (event) => {\r\n    this.setState({\r\n      username: event.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form type=\"submit\" className=\"formBox\" onSubmit={this.handleSubmit}>\r\n        <input\r\n          className=\"inputGit\"\r\n          type=\"text\"\r\n          onChange={this.onNameChange}\r\n          value={this.state.username}\r\n          placeholder=\"GitHub username\"\r\n          required\r\n        />\r\n        <button className=\"buttonGit\">Add User</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nclass GitHubApp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      profiles: myData,\r\n    };\r\n  }\r\n\r\n  addNewProfile = (profileData) => {\r\n    this.setState( prev => (\r\n      {profiles: [...prev.profiles, profileData]}\r\n    ))\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <TopNav />\r\n        <div className=\"App\">\r\n          <div id=\"titleApp\">GitHub Cards</div>\r\n          <Form onSubmit={this.addNewProfile} />\r\n          <CardList data={this.state.profiles} />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst CardList = (props) => {\r\n  return (\r\n    <>\r\n      {props.data.map((profile) => (\r\n        <Card key={profile.id} {...profile} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nconst myData = [\r\n  {\r\n    name: \"John Smith\",\r\n    avatar_url:\r\n      \"https://wallpaperhd.wiki/wp-content/uploads/4k-wallpaper-minimalist-the-witcher-3-wild-hunt-minimalist-uhdpaper.com-4k-5.1321-wp.thumbnail.jpg\",\r\n    bio: \"Software Engineer at Earth Labs\",\r\n    public_repos: 3,\r\n    followers: 5\r\n  },\r\n];\r\n\r\nexport default GitHubApp;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './SudokuApp.css';\r\nimport TopNav from './TopNav';\r\n\r\nclass Square extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.state = {\r\n        history: 0,\r\n      }\r\n    }\r\n  \r\n    buttonIsClicked(e) {\r\n      this.setState({\r\n        history: this.state.history + 1,\r\n      });\r\n    }\r\n  \r\n    resetIndividual(e) {\r\n      this.setState({\r\n        history: 0,\r\n        \r\n      })\r\n    }\r\n  \r\n    render() {\r\n      if (this.props.clearAll) {\r\n        this.setState({\r\n          history: 0,\r\n        });\r\n      }\r\n  \r\n      return (\r\n        <td \r\n          id=\"squareButton\"\r\n          onClick={(e) => this.buttonIsClicked(e)}\r\n          onContextMenu={(e) => this.resetIndividual(e)}\r\n        >\r\n          {this.state.history + this.props.text}\r\n        </td>\r\n      );\r\n    }\r\n  }\r\n  \r\n  class GitHubApp extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.state = {\r\n        incrementAmount: 0,\r\n        clearAll: false\r\n      }\r\n  \r\n    }\r\n    \r\n    makeBoard()  {\r\n      let table = [];\r\n      let id = 0;\r\n      for (let i = 0; i < 5; i++) {\r\n        let children = [];\r\n        for (let j = 0; j < 5; j++) {\r\n          children.push(<Square key={id} clearAll={this.state.clearAll} text={this.state.incrementAmount}/>);\r\n          id += 1;\r\n        }\r\n        table.push(<tr key={id}>{children}</tr>);\r\n        id += 1;\r\n      }\r\n  \r\n      if (this.state.clearAll) {\r\n        this.setState({\r\n          clearAll: false,\r\n        })\r\n      }\r\n  \r\n      return table;\r\n    }\r\n  \r\n    incrementAll(e) {\r\n      const prevAmount = this.state.incrementAmount;\r\n      this.setState({\r\n        incrementAmount: prevAmount + 1,\r\n      });\r\n    }\r\n  \r\n    clearAll(e) {\r\n      this.setState({\r\n        clearAll: true,\r\n        incrementAmount: 0\r\n      });\r\n    }\r\n\r\n    contextMenu = (e) => {\r\n      e.preventDefault();\r\n    };\r\n\r\n    render() {\r\n      const tempVar = 1;\r\n  \r\n      return(\r\n        <div>\r\n          <TopNav />\r\n          <table id=\"myTableId\" className=\"myTable\" onContextMenu={this.contextMenu}>\r\n            <tbody>\r\n              {this.makeBoard()}\r\n            </tbody>\r\n          </table>\r\n          <div className=\"botOfGrid\">\r\n            <div>\r\n              <br />\r\n              <button id=\"incrementAll\" onClick={(e) => this.incrementAll(e)}>Increment All</button>\r\n              <div>Increment Amount: {this.state.incrementAmount}</div>\r\n              <br />\r\n            </div>\r\n            <button id=\"clearAll\" onClick={(e) => this.clearAll(e)}>Clear All</button>\r\n            <div>Right Click Individual Box to Reset Individual History</div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\nexport default GitHubApp;\r\n","import React from 'react';\r\nimport './FrontPage.css';\r\n\r\nimport { Route, Link, BrowserRouter as Router } from 'react-router-dom'\r\n\r\nclass FrontPage extends React.Component {\r\n    render() {\r\n      return (\r\n        <>\r\n        <div id=\"Greeting\">\r\n          My React Apps\r\n        </div>\r\n        <div class=\"linkButtons\">\r\n          <Link className=\"theLink\" to=\"./GitHubApp\">Go to GitHub App</Link>\r\n          <Link className=\"theLink\" to=\"./SudokuApp\">Go to Sudoku App</Link>\r\n          <Link className=\"theLink\" to=\"./SpeedCount\">Go to SpeedCount App</Link>\r\n        </div>\r\n        </>\r\n      );\r\n    }\r\n}\r\n\r\nexport default FrontPage;","import React, { useState, useEffect } from \"react\";\r\nimport TopNav from \"../TopNav\";\r\nimport \"./SpeedCount.css\";\r\n\r\n// v1 STAR MATCH - Starting Template\r\nconst SunsDisplay = (props) => (\r\n  <>\r\n    {utils.range(1, props.count).map((sunId) => (\r\n      <div key={sunId} className=\"sun\" />\r\n    ))}\r\n  </>\r\n);\r\n\r\nconst PlayNumber = (props) => (\r\n  <button\r\n    className=\"number\"\r\n    style={{ backgroundColor: colors[props.status] }}\r\n    onClick={() => props.onClick(props.number, props.status)}\r\n  >\r\n    {props.number}\r\n  </button>\r\n);\r\n\r\nconst PlayAgain = (props) => (\r\n  <div className=\"game-done\">\r\n    <div\r\n      className=\"message\"\r\n      style={{ color: props.gameStatus === \"lost\" ? \"red\" : \"green\" }}\r\n    >\r\n      {props.gameStatus === \"lost\" ? \"Game Over\" : \"That was fast! You Won!\"}\r\n    </div>\r\n    <button id=\"play-again-btn\" onClick={props.onClick}>Play Again</button>\r\n  </div>\r\n);\r\n\r\n// Custom Hook, Stateful Function\r\nconst useGameState = () => {\r\n  const [suns, setSuns] = useState(utils.random(1, 9));\r\n  const [availableNums, setAvailableNums] = useState(utils.range(1, 9));\r\n  const [candidateNums, setCandidateNums] = useState([]);\r\n  const [secondsLeft, setSecondsLeft] = useState(10);\r\n\r\n  useEffect(() => {\r\n    if (secondsLeft > 0 && availableNums.length > 0) {\r\n      const timerId = setTimeout(() => {\r\n        setSecondsLeft(secondsLeft - 1);\r\n      }, 1000);\r\n      return () => clearTimeout(timerId);\r\n    }\r\n  });\r\n\r\n  const setGameState = (newCandidateNums) => {\r\n    if (utils.sum(newCandidateNums) !== suns) {\r\n      setCandidateNums(newCandidateNums);\r\n    } else {\r\n      const newAvailableNums = availableNums.filter(\r\n        (n) => !newCandidateNums.includes(n)\r\n      );\r\n\r\n      //redraw suns (from what's available)\r\n      setSuns(utils.randomSumIn(newAvailableNums, 9));\r\n      setAvailableNums(newAvailableNums);\r\n      setCandidateNums([]);\r\n    }\r\n  };\r\n\r\n  return { suns, availableNums, candidateNums, secondsLeft, setGameState };\r\n};\r\n\r\nconst Game = (props) => {\r\n  const {\r\n    suns,\r\n    availableNums,\r\n    candidateNums,\r\n    secondsLeft,\r\n    setGameState,\r\n  } = useGameState();\r\n\r\n  const candidatesAreWrong = utils.sum(candidateNums) > suns;\r\n\r\n  const gameStatus =\r\n    availableNums.length === 0 ? \"won\" : secondsLeft === 0 ? \"lost\" : \"active\";\r\n\r\n  const numberStatus = (number) => {\r\n    if (!availableNums.includes(number)) {\r\n      return \"used\";\r\n    }\r\n\r\n    if (candidateNums.includes(number)) {\r\n      return candidatesAreWrong ? \"wrong\" : \"candidate\";\r\n    }\r\n\r\n    return \"available\";\r\n  };\r\n\r\n  const onNumberClick = (number, currStatus) => {\r\n    // determine is new status of number after being clicked\r\n    if (currStatus === \"used\" || gameStatus !== \"active\") {\r\n      return;\r\n    }\r\n\r\n    const newCandidateNums =\r\n      currStatus === \"available\"\r\n        ? candidateNums.concat(number)\r\n        : candidateNums.filter((num) => num !== number);\r\n\r\n    setGameState(newCandidateNums);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TopNav />\r\n      <div className=\"game\">\r\n        <div className=\"help\">\r\n          Count the Number of Suns!\r\n        </div>\r\n        <div className=\"body\">\r\n          <div className=\"left\">\r\n            {gameStatus !== \"active\" ? (\r\n              <PlayAgain onClick={props.startNewGame} gameStatus={gameStatus} />\r\n            ) : (\r\n              <SunsDisplay count={suns} />\r\n            )}\r\n          </div>\r\n          <div className=\"right\">\r\n            {utils.range(1, 9).map((number) => (\r\n              <PlayNumber\r\n                key={number}\r\n                status={numberStatus(number)}\r\n                number={number}\r\n                onClick={onNumberClick}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"timer\">Time Remaining: <span id=\"timer-number\">{secondsLeft}</span></div>\r\n        <div className=\"help-note\"><b>Note:</b> Select multiple numbers to add them to equal the count of the suns. You can also deselect a number you've selected by clicking on it again. </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n// Color Theme\r\nconst colors = {\r\n  available: \"rgb(85, 38, 0)\",\r\n  used: \"lightgreen\",\r\n  wrong: \"lightcoral\",\r\n  candidate: \"deepskyblue\",\r\n};\r\n\r\n// Math science\r\nconst utils = {\r\n  // Sum an array\r\n  sum: (arr) => arr.reduce((acc, curr) => acc + curr, 0),\r\n\r\n  // create an array of numbers between min and max (edges included)\r\n  range: (min, max) => Array.from({ length: max - min + 1 }, (_, i) => min + i),\r\n\r\n  // pick a random number between min and max (edges included)\r\n  random: (min, max) => min + Math.floor(Math.random() * (max - min + 1)),\r\n\r\n  // Given an array of numbers and a max...\r\n  // Pick a random sum (< max) from the set of all available sums in arr\r\n  randomSumIn: (arr, max) => {\r\n    const sets = [[]];\r\n    const sums = [];\r\n    for (let i = 0; i < arr.length; i++) {\r\n      for (let j = 0, len = sets.length; j < len; j++) {\r\n        const candidateSet = sets[j].concat(arr[i]);\r\n        const candidateSum = utils.sum(candidateSet);\r\n        if (candidateSum <= max) {\r\n          sets.push(candidateSet);\r\n          sums.push(candidateSum);\r\n        }\r\n      }\r\n    }\r\n    return sums[utils.random(0, sums.length - 1)];\r\n  },\r\n};\r\n\r\nconst SpeedCount = (props) => {\r\n  const [gameId, setGameId] = useState(1);\r\n  return <Game key={gameId} startNewGame={() => setGameId(gameId + 1)} />;\r\n};\r\n\r\nexport default SpeedCount;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport GitHubApp from './GitHubApp';\r\nimport SudokuApp from './SudokuApp';\r\nimport FrontPage from './FrontPage';\r\nimport SpeedCount from './SpeedCount/SpeedCount';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Route, Link, BrowserRouter as Router } from 'react-router-dom'\r\n\r\nconst routing = (\r\n  <Router>\r\n    <div>\r\n      <Route exact path=\"/\" component={FrontPage} />\r\n      <Route path=\"/GitHubApp\" component={GitHubApp} />\r\n      <Route path=\"/SudokuApp\" component={SudokuApp} />\r\n      <Route path=\"/SpeedCount\" component={SpeedCount} />\r\n    </div>\r\n  </Router>\r\n)\r\n\r\nReactDOM.render(\r\n  // <OutputComponents />\r\n  routing,\r\n  document.getElementById('reactSide')\r\n);\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}